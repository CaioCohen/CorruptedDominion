{"ast":null,"code":"import _asyncToGenerator from \"D:/VSCode/CorruptedDominion/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TemplateRef } from '@angular/core';\nimport { Campanha, Mapa } from 'src/app/models/campanha';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/inv.service\";\nimport * as i2 from \"ngx-bootstrap/modal\";\nexport let MapasComponent = /*#__PURE__*/(() => {\n  class MapasComponent {\n    constructor(service, modalService) {\n      this.service = service;\n      this.modalService = modalService;\n      this.campanha = \"HW\";\n      this.info = new Campanha();\n      this.isEdit = false;\n      this.isAdmin = false;\n      this.senha = \"\";\n    }\n    ngOnInit() {\n      if ('campanha' in sessionStorage) {\n        this.campanha = sessionStorage.getItem('campanha');\n      }\n      if (this.campanha == \"HW\") {\n        this.getCampanha();\n      }\n      if (\"isAdmin\" in sessionStorage) {\n        this.isAdmin = sessionStorage.getItem(\"isAdmin\") == \"sim\";\n      }\n    }\n    alerta(mensagem) {\n      alert(mensagem);\n    }\n    getCampanha() {\n      this.service.getCampanha().subscribe(response => {\n        this.info = response;\n      }, error => {\n        alert(\"Um erro ocorreu enquanto recuperava as informações da campanha, cheque a internet.\");\n      });\n    }\n    openModal(template) {\n      this.modalRef = this.modalService.show(template);\n      //this.modalRef.hide();\n    }\n    decline() {\n      if (this.modalRef != undefined) {\n        this.modalRef.hide();\n      }\n    }\n    addMapa() {\n      if (!this.info.mapas) {\n        this.info.mapas = [];\n      }\n      this.info.mapas.push(new Mapa({\n        \"titulo\": \"Novo mapa\",\n        \"urlImagem\": \"\"\n      }));\n    }\n    deleteMapa(i) {\n      this.info.mapas.splice(i, 1);\n    }\n    editar() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.isEdit = false;\n        let cripto = yield _this.service.hashString(_this.senha);\n        if (_this.service.validate(cripto)) {\n          _this.service.putCampanha(_this.info).subscribe(response => {\n            _this.decline();\n          }, error => {\n            alert(\"Um erro ocorreu enquanto salvava as informações da campanha, cheque a internet.\");\n          });\n        } else {\n          alert(\"senha incorreta\");\n        }\n      })();\n    }\n    onEdit() {\n      this.isEdit = !this.isEdit;\n    }\n  }\n  MapasComponent.ɵfac = function MapasComponent_Factory(t) {\n    return new (t || MapasComponent)(i0.ɵɵdirectiveInject(i1.InvService), i0.ɵɵdirectiveInject(i2.BsModalService));\n  };\n  MapasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapasComponent,\n    selectors: [[\"app-mapas\"]],\n    decls: 0,\n    vars: 0,\n    template: function MapasComponent_Template(rf, ctx) {},\n    styles: [\".bloco[_ngcontent-%COMP%]{background-color:#000000b3;margin-left:10%;margin-right:10%;margin-top:10px;position:relative;text-align:center;color:#fff}.map[_ngcontent-%COMP%]{width:100%;padding:10px}.legenda[_ngcontent-%COMP%]{text-align:left;color:#fff;text-shadow:0 0 2px rgb(100,98,98);font-size:150%}@media only screen and (max-width: 750px){.bloco[_ngcontent-%COMP%]{margin:10px 0}}\"]\n  });\n  return MapasComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}