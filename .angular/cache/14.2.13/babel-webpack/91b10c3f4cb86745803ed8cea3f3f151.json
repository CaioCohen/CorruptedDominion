{"ast":null,"code":"import { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let InvService = /*#__PURE__*/(() => {\n  class InvService {\n    constructor(http) {\n      this.http = http;\n      this.API = 'https://corrupted-domain-default-rtdb.firebaseio.com/humblewood.json';\n      this.alfabeto = \"abcdefghijklmnopqrstuvwxyz ,.!;-/ABCDEFGHIJKLMONPQRSTUVWXYZáÁóÓíÍãôÃÔéÉ@#$%&*()+=|\";\n      this.chave = 4;\n    }\n    list() {\n      return this.http.get(this.API + \".json\");\n    }\n    edit(id, inventario) {\n      return this.http.put(this.API + \"/\" + id + \"/inventario.json\", inventario).pipe(take(1));\n    }\n    getCampanha() {\n      return this.http.get(this.API);\n    }\n    putCampanha(campanha) {\n      return this.http.put(this.API, campanha).pipe(take(1));\n    }\n    criptografar(text) {\n      let text2 = text;\n      for (let i = 0; i < text.length; i++) {\n        while (this.alfabeto.length - this.chave < this.findChar(text2[i])) {\n          this.alfabeto += this.alfabeto;\n        }\n        let criptografia = this.setCharAt(text, i, this.alfabeto[this.findChar(text2[i]) + this.chave]);\n      }\n      return criptografia;\n    }\n    setCharAt(str, index, chr) {\n      if (index > str.length - 1) return str;\n      return str.substring(0, index) + chr + str.substring(index + 1);\n    }\n    findChar(str) {\n      let achou = false;\n      let i = 0;\n      while (achou == false) {\n        if (this.alfabeto[i] == str) {\n          achou = true;\n        } else {\n          i++;\n        }\n      }\n      return i;\n    }\n  }\n  InvService.ɵfac = function InvService_Factory(t) {\n    return new (t || InvService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  InvService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InvService,\n    factory: InvService.ɵfac,\n    providedIn: 'root'\n  });\n  return InvService;\n})();","map":null,"metadata":{},"sourceType":"module"}